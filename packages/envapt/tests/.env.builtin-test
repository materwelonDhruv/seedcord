# Basic type testing
TEST_STRING=hello world
TEST_NUMBER=42.5
TEST_BOOLEAN=true
TEST_INTEGER=42
TEST_FLOAT=3.14159
TEST_BIGINT=123456789012345678901234567890
TEST_SYMBOL=mysymbol

# Array testing - different delimiters
TEST_ARRAY_COMMA=item1,item2,item3
TEST_ARRAY_SPACE=one two three
TEST_ARRAY_COMMA_SPACE=apple, banana, cherry
TEST_ARRAY_EMPTY=""
TEST_ARRAY_WHITESPACE_ONLY=" "
TEST_ARRAY_NUMBERS=1,2,3
TEST_ARRAY_BOOLEANS=true,false,yes
TEST_ARRAY_TIME=5ms,5s,5m,5h

# JSON testing
TEST_JSON_OBJECT={"name":"test","version":1,"enabled":true}
TEST_JSON_ARRAY=[1,2,3,"four",true]
TEST_JSON_INVALID={"invalid":"json"

# URL testing
TEST_URL_VALID=https://api.example.com/v1
TEST_URL_INVALID=not-a-valid-url

# RegExp testing
TEST_REGEXP_SIMPLE=\d+
TEST_REGEXP_WITH_FLAGS=/[a-z]+/gi
TEST_REGEXP_EMAIL=/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/i
TEST_REGEXP_URL_PATTERN=/^https?:\/\/([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$/
TEST_REGEXP_PHONE=/^\+?1?[-.\s]?\(?([0-9]{3})\)?[-.\s]?([0-9]{3})[-.\s]?([0-9]{4})$/
TEST_REGEXP_INVALID=[unclosed

# Date testing
TEST_DATE_ISO=2023-12-25T00:00:00.000Z
TEST_DATE_TIMESTAMP=1640995200000
TEST_DATE_INVALID=not-a-date

# Boolean edge cases
TEST_BOOL_TRUE_UPPER=TRUE
TEST_BOOL_YES=yes
TEST_BOOL_ON=on
TEST_BOOL_ONE=1
TEST_BOOL_FALSE_UPPER=FALSE
TEST_BOOL_NO=no
TEST_BOOL_OFF=off
TEST_BOOL_ZERO=0
TEST_BOOL_EMPTY=
TEST_BOOL_UNKNOWN=maybe

# Template variable testing base values
TEMPLATE_STRING_BASE=hello
TEMPLATE_WORLD_BASE=world
TEMPLATE_NUM_BASE=42
TEMPLATE_DECIMAL_BASE=3.14
TEMPLATE_BOOL_BASE=true
TEMPLATE_FALSE_BASE=false
TEMPLATE_HOST_BASE=localhost
TEMPLATE_PORT_BASE=5432
TEMPLATE_ITEM1_BASE=alpha
TEMPLATE_ITEM2_BASE=beta
TEMPLATE_ITEM3_BASE=gamma
TEMPLATE_DOMAIN_BASE=example\.com
TEMPLATE_DIGITS_BASE=3

# Template variables for string converter
TEST_STRING_TEMPLATE=${TEMPLATE_STRING_BASE} ${TEMPLATE_WORLD_BASE}

# Template variables for number converters
TEST_NUMBER_TEMPLATE=${TEMPLATE_NUM_BASE}
TEST_INTEGER_TEMPLATE=${TEMPLATE_NUM_BASE}
TEST_FLOAT_TEMPLATE=${TEMPLATE_DECIMAL_BASE}

# Template variables for boolean converter
TEST_BOOLEAN_TEMPLATE=${TEMPLATE_BOOL_BASE}
TEST_BOOLEAN_FALSE_TEMPLATE=${TEMPLATE_FALSE_BASE}

# Template variables for bigint and symbol converters
TEST_BIGINT_TEMPLATE=${TEMPLATE_NUM_BASE}
TEST_SYMBOL_TEMPLATE=${TEMPLATE_STRING_BASE}

# Template variables for array converters
TEST_ARRAY_COMMA_TEMPLATE=${TEMPLATE_ITEM1_BASE},${TEMPLATE_ITEM2_BASE},${TEMPLATE_ITEM3_BASE}
TEST_ARRAY_SPACE_TEMPLATE=${TEMPLATE_ITEM1_BASE} ${TEMPLATE_ITEM2_BASE} ${TEMPLATE_ITEM3_BASE}
TEST_ARRAY_COMMA_SPACE_TEMPLATE=${TEMPLATE_ITEM1_BASE}, ${TEMPLATE_ITEM2_BASE}, ${TEMPLATE_ITEM3_BASE}

# Template variables for JSON converter
TEST_JSON_OBJECT_TEMPLATE={"host":"${TEMPLATE_HOST_BASE}","port":${TEMPLATE_PORT_BASE},"enabled":${TEMPLATE_BOOL_BASE}}

# Template variables for URL converter
TEST_URL_TEMPLATE=https://${TEMPLATE_HOST_BASE}:${TEMPLATE_PORT_BASE}/api

# Template variables for RegExp converter
TEST_REGEXP_TEMPLATE=\d{${TEMPLATE_NUM_BASE}}
TEST_REGEXP_EMAIL_TEMPLATE=/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.${TEMPLATE_DOMAIN_BASE}$/i
TEST_REGEXP_PHONE_TEMPLATE=/^\+?1?[-.\s]?\(?([0-9]{${TEMPLATE_DIGITS_BASE}})\)?[-.\s]?([0-9]{${TEMPLATE_DIGITS_BASE}})[-.\s]?([0-9]{4})$/

# Template variables for Date converter
TEST_DATE_TEMPLATE=2023-12-25T00:00:00.000Z

# Time testing
TEST_TIME_MILLISECONDS=500ms
TEST_TIME_SECONDS=5s
TEST_TIME_MINUTES=30m
TEST_TIME_HOURS=2h
TEST_TIME_DECIMAL_SECONDS=1.5s
TEST_TIME_PLAIN_NUMBER=1000
TEST_TIME_INVALID=5x
TEST_TIME_EMPTY=

# Template variables for Time converter
TEMPLATE_TIME_VALUE=10
TEMPLATE_TIME_UNIT=s
TEST_TIME_TEMPLATE=${TEMPLATE_TIME_VALUE}${TEMPLATE_TIME_UNIT}
